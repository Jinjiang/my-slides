(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{140:function(n,t,e){"use strict";var r={components:{MarkDisplay:e(141).a},props:{content:String},methods:{setTitle:function(n){var title=n.title;setTimeout(function(){document.title=title||"My Slides"})}}},o=e(17),component=Object(o.a)(r,function(){var n=this.$createElement;return(this._self._c||n)("MarkDisplay",{attrs:{markdown:this.content,autoBaseUrl:"",autoBlankTarget:"",autoFontSize:"",keyboardCtrl:"",urlHashCtrl:"",supportPreview:""},on:{title:this.setTitle}})},[],!1,null,null,null);t.a=component.exports},143:function(n,t,e){var content=e(161);"string"==typeof content&&(content=[[n.i,content,""]]),content.locals&&(n.exports=content.locals);(0,e(60).default)("f6dbeb3a",content,!1,{sourceMap:!1})},160:function(n,t,e){"use strict";var r=e(143);e.n(r).a},161:function(n,t,e){(n.exports=e(59)(!1)).push([n.i,"body{font-family:Avenir,Helvetica,Arial,sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;margin:0;color:#2c3e50}",""])},191:function(n,t,e){"use strict";e.r(t);var r=e(140),o={components:{Slides:r.a},data:function(){return{content:'\x3c!-- style: background-image: url(./bg.jpg); color: white; --\x3e\n\n## CSS Houdini 初探\n\nCSSConf CN\n\n@勾三股四 2018-03-31\n\n----\n\n\x3c!-- style: background-image: url(./avatar.png) --\x3e\n\n&nbsp;\n\n&nbsp;\n<p>\n  <img alt="AlibabaCloud" src="./alibabacloud.png" style="margin-left: 20vw; height: 15vh; vertical-align: middle;" />\n  <img alt="Vue.js" src="./vue.png" style="height: 10vh; vertical-align: middle;" />\n  <img alt="W3C HTML IG ZH" src="./w3c.png" style="height: 10vh; vertical-align: middle; filter: grayscale(100%);" /><span style="text-shadow: none; margin-left: 0.5vw; color: #eee; display: inline-block; vertical-align: middle;">/</span>\n  <img alt="996 Band" src="./996.png" style="height: 11vh; vertical-align: middle;" /> <span style="font-size: 10vh; display: inline-block; vertical-align: bottom;">⚽️</span>\n</p>\n\n----\n\n\x3c!-- style: background-image: url(./html5-contribution.png) --\x3e\n\nW3C HTML5 Contributor\n\n----\n\n<h1><ruby>\n  胡 <rp>(</rp><rt>Hu<sup>2</sup></rt><rp>)</rp>\n  迪 <rp>(</rp><rt>di<sup>2</sup></rt><rp>)</rp>\n  尼 <rp>(</rp><rt>ni<sup>2</sup></rt><rp>)</rp>\n</ruby>?</h1>\n\n----\n\n> Harry Houdini (born Erik Weisz, later Ehrich Weiss or Harry Weiss; March 24, 1874 – October 31, 1926) was an Austro-Hungarian-born American illusionist and stunt performer, noted for his sensational escape acts.\n\n<small>https://en.wikipedia.org/wiki/Harry_Houdini</small>\n\n----\n\n> 哈里·胡迪尼（Harry Houdini，1874年3月24日-1926年10月31日），原名埃里克·韦斯（Ehrich Weiss），匈牙利裔美国魔术师，享誉国际的脱逃艺术家，能不可思议的自绳索、脚镣及手铐中脱困，他同时也是以魔术方法戳穿所谓“通灵术”的反伪科学先驱。\n\n<small>https://baike.baidu.com/item/哈里·胡迪尼/7543901</small>\n\n----\n\n`CSS Houdini`\n\n# CSS 胡迪尼\n\n----\n\nYou can extend every part<br>of the browser rendering process:<br>parse, layout, paint, animation ...\n\n----\n\n### CSS Houdini\n\n<div style="display: flex; margin-top: -5vh">\n  <ul>\n    <li><a href="https://wicg.github.io/CSS-Parser-API/">Parser API</a></li>\n    <li><a href="https://drafts.css-houdini.org/css-paint-api/">Paint API</a></li>\n    <li><a href="https://drafts.css-houdini.org/css-layout-api/">Layout API</a></li>\n    <li><a href="https://wicg.github.io/animation-worklet/">Animation Worklet</a></li>\n  </ul>\n  <ul>\n    <li><a href="https://drafts.css-houdini.org/css-typed-om/">Typed OM</a></li>\n    <li><a href="https://drafts.css-houdini.org/css-properties-values-api/">Properties/Values</a></li>\n    <li><a href="https://drafts.css-houdini.org/worklets/">Worklets</a></li>\n  </ul>\n</div>\n\n<small>Font Metrics, Animation API, ScrollTimeline ...</small>\n\n----\n\n1. Basic strong-type APIs\n2. Extension APIs for<br/>every part of rendering\n3. some other relative specs\n\n----\n\n### 1 Typed OM\n\n* Typed Object Model<br/>for each kind of CSS values\n* `StylePropertyMap` for elements\n\n----\n\n```javascript\n// <position> 5px 10px\nlet pos = new CSSPositionValue(\n  new CSSUnitValue(5, "px"),\n  new CSSUnitValue(10, "px")\n);\n```\n\n----\n\n```javascript\nel.style.width\nel.attributeStyleMap.get(\'width\')\n\ngetComputedStyle(el).width\nel.computedStyleMap().get(\'width\')\n```\n\n----\n\nMake all CSS values structured\n\nEasy for complex computation\n\n<small>https://drafts.css-houdini.org/css-typed-om/</small>\n\n----\n\n### 2 Properties/Values\n\n* register new properties\n* with name, type, initial value ...\n\n----\n\n```javascript\nCSS.registerProperty({\n  name: \'--stop-color\',\n  syntax: \'<color>\',\n  inherits: false,\n  initialValue: \'rgba(0,0,0,0)\'\n})\n```\n\n----\n\n```javascript\nCSS.unregisterProperty(\n  \'--stop-color\'\n)\n```\n\n----\n\nBut why we need this?\n\n----\n\nLet\'s see CSS Vars first.\n\n<small>https://drafts.csswg.org/css-variables/</small>\n\n----\n\n```css\n.button {\n  --stop-color: red; /* red */\n  background: linear-gradient(\n    var(--stop-color), black);\n  transition: --stop-color 1s;\n}\n.button:hover {\n  --stop-color: green; /* green */\n}\n```\n\n----\n\n<h1><ruby>\n  划重点 <rp>(</rp><rt>The Point</rt><rp>)</rp>\n</ruby></h1>\n\n----\n\n```\n.button { transition: --stop-color 1s; }\n```\n\n----\n\nCSS Vars do NOT\n\nsupport transitions well\n\n----\n\n> The allowed syntax for custom properties is **extremely permissive**. The <declaration-value> production matches any sequence of one or more tokens ...\n\n<small>https://drafts.csswg.org/css-variables/</small>\n\n----\n\n> Notably, they can even be transitioned or animated, but since the UA has no way to interpret their contents, they always use the **"flips at 50%"** behavior that is used for any other pair of values that can’t be intelligently interpolated.\n\n<small>https://drafts.csswg.org/css-variables/</small>\n\n----\n\nBut now we have `CSS.registerProperty()`\n\nSo it works now.\n\n<small>https://drafts.css-houdini.org/css-properties-values-api/</small>\n\n----\n\n# Demo\n\n[link](https://codepen.io/Jinjiang/pen/OvZqNr)\n\n----\n\n### 3 Worklets\n\n* app -> applet 小应用\n* worker -> worklet 小进程\n\n----\n\n> ... running scripts in stages of the rendering pipeline independent of the main javascript execution environment.\n\n<small>https://drafts.css-houdini.org/worklets/</small>\n\n----\n\n`xxxWorklet.addModule(\'xxx.js\').then(...)`\n\nwill be used in all below\n\n----\n\n### 4 Paint API\n\nDefine new CSS syntax to draw an image in a certain area with Canvas API (subset).\n\n----\n\n```css\nbutton {\n  background-image: url(...);\n  background-image: paint(xxx);\n}\n```\n\n----\n\n```javascript\nCSS.paintWorklet.addModule(\'xxx.js\')\n```\n\n----\n\n```javascript\n// xxx.js\nregisterPaint(\'xxx\', class {\n  static get inputProperties () { ... }\n  static get inputArguments () { ... }\n  paint (ctx, geom, props) { ... }\n})\n```\n\n----\n\n* watch area size and<br/>some properties\n* allowed some arguments\n* have a Canvas context\n\n----\n\n> Note: The `PaintRenderingContext2D` implements a subset of the `CanvasRenderingContext2D` API. Specifically it doesn’t implement the `CanvasImageData`, `CanvasUserInterface`, `CanvasText`, or `CanvasTextDrawingStyles` APIs.\n\n<small>https://drafts.css-houdini.org/css-paint-api/#2d-rendering-context</small>\n\n----\n\n# Demo\n\n[link](https://codepen.io/Jinjiang/pen/QmrovW)\n\n----\n\n### Other Online Resources\n\n- [Samples - GoogleChromeLabs](https://googlechromelabs.github.io/houdini-samples/)\n- [Experimental showcase](https://lab.iamvdo.me/houdini/) by [@iamvdo](https://twitter.com/iamvdo)\n\n----\n\n### 5 Layout API\n\nTo write polyfills for any layout algorithm.\n\n----\n\nNot implemented and no demo here.\n\nBut just imagine that:\n\n----\n\n\x3c!-- style: background-image: url(./waterfall.png) --\x3e\n\n```css\ntaobao-item-list {\n  display: layout(waterfall);\n}\n```\n\n<small>https://myst729.github.io/Waterfall/</small>\n\n----\n\n\x3c!-- style: background-image: url(./tagcloud.png) --\x3e\n\n```css\nkeyword-list {\n  display: layout(tag-cloud)\n}\n```\n\n<small>https://www.jasondavies.com/wordcloud/</small>\n\n----\n\n```javascript\nCSS.layoutWorklet.addModule(\'waterfall.js\')\n```\n\n----\n\n```javascript\n// waterfall.js\nregisterLayout(\'waterfall\', class {\n  static get inputProperties ()\n  static get childrenInputProperties ()\n  static get childDisplay ()\n  *intrinsicSizes(children, styleMap)\n  *layout(constraints, children,\n    styleMap, edges, breakToken)\n})\n```\n\n----\n\nIt\'s more complex. But very powerful.\n\n<small>https://drafts.css-houdini.org/css-layout-api/</small>\n\n----\n\nAnd 2 other specs:\n\n* [Box Tree API](https://drafts.css-houdini.org/box-tree-api/)\n* [Font Metrics API](https://drafts.css-houdini.org/font-metrics-api/)\n\n<small>They can help you do more precise work.</small>\n\n----\n\n### 6 Animation Worklet\n\nConnect different animations together with some fixed rules.\n\n----\n\n# Demo\n\n[link](https://googlechromelabs.github.io/houdini-samples/animation-worklet/twitter-hidey-bar/)\n\n<small>actually it\'s a polyfill</small>\n\n----\n\nWhat\'s the magic here?\n\n----\n\nYou need to learn first:\n\n- [Web Animations](https://drafts.csswg.org/web-animations/)\n- [Timeline](https://drafts.csswg.org/web-animations/#timelines)\n- [Keyframe Effects](https://drafts.csswg.org/web-animations/#keyframe-effects)\n- [Scroll-Linked Animation](https://wicg.github.io/scroll-animations/)\n\n----\n\nThen use [Animation Worklet](https://wicg.github.io/animation-worklet/) to connect them together!\n\n----\n\n```javascript\nanimationWorklet.addModule(\'sticky.js\')\n.then(() => {\n  new WorkletAnimation(\n    \'sticky\',\n    effect,\n    scrollTimeline,\n    { scrollTimeline, docTimeline }\n  ).play()\n})\n```\n\n----\n\n```javascript\n// sticky.js\nregisterAnimator(\'sticky\', class {\n  constructor (options)\n  animate (currentTime, effect)\n})\n```\n\n----\n\nImplemented but not really work well in Chrome.\n\n<small>https://wicg.github.io/animation-worklet/</small>\n\n----\n\n### 7 Parser API\n\nparsing arbitrary CSS-like languages into a mildly typed representation\n\n----\n\nNot implemented and no demo.\n\n<small>https://wicg.github.io/CSS-Parser-API/</small>\n\n----\n\n\x3c!-- style: background-image: url(./houdini-support.png); background-size: contain; --\x3e\n\nhttps://ishoudinireadyyet.com\n\n----\n\n# Conclusion\n\n----\n\n### CSS Houdini\n\n<div style="display: flex; margin-top: -5vh;">\n  <ul>\n    <li><a href="https://wicg.github.io/CSS-Parser-API/">Parser API</a></li>\n    <li><a href="https://drafts.css-houdini.org/css-paint-api/">Paint API</a></li>\n    <li><a href="https://drafts.css-houdini.org/css-layout-api/">Layout API</a></li>\n    <li><a href="https://wicg.github.io/animation-worklet/">Animation Worklet</a></li>\n  </ul>\n  <ul>\n    <li><a href="https://drafts.css-houdini.org/css-typed-om/">Typed OM</a></li>\n    <li><a href="https://drafts.css-houdini.org/css-properties-values-api/">Properties/Values</a></li>\n    <li><a href="https://drafts.css-houdini.org/worklets/">Worklets</a></li>\n  </ul>\n</div>\n\n<small>Font Metrics, Animation API, ScrollTimeline ...</small>\n\n----\n\n### References\n\n- Specs in [Houdini Team](https://drafts.css-houdini.org/) and [WICG](https://wicg.io)\n- Slides from [@malyw](http://slides.com/malyw/houdini) [@philwalton](https://philipwalton.github.io/talks/2017-06-15/)<br />and [Google I/O](https://www.youtube.com/watch?v=sE3ttkP15f8)\n- Samples from [Chrome](http://googlechromelabs.github.io/houdini-samples/) [@iamvdo](https://lab.iamvdo.me/houdini/)\n\n----\n\n### Articles\n\n- [Say Hello to Houdini<br>and the CSS Paint API](https://codersblock.com/blog/say-hello-to-houdini-and-the-css-paint-api/)\n- [CSS Tricks](https://css-tricks.com/what-houdini-means-for-animating-transforms/)\n- [Google Developers](https://developers.google.com/web/updates/2016/05/houdini)\n- [Smashing Magazine](https://www.smashingmagazine.com/2016/03/houdini-maybe-the-most-exciting-development-in-css-youve-never-heard-of/)\n\n----\n\n\x3c!-- style: background-image: url(./manifesto.png) --\x3e\n\n## [The Extensible Web Manifesto](https://www.w3.org/community/nextweb/)\n\n----\n\n### Now We Have\n\n* Web Components\n* Web Assembly\n* CSS Houdini\n\n----\n\n### Let\'s <s>do</s> try it!\n\n----\n\n<h1><ruby>\n  玩 <rp>(</rp><rt>One🤪</rt><rp>)</rp>\n  毛 <rp>(</rp><rt>More😎</rt><rp>)</rp>\n  线 <rp>(</rp><rt>Thing</rt><rp>)</rp>\n</ruby></h1>\n\n----\n\n```\nmy-slides {\n  // created with AI\n  // via 阿里巴巴达摩研究院\n  font-family: 阿里汉仪智能黑体;\n}\n```\n\n----\n\n# Thanks\n\n<small>@勾三股四 zhaojinjiang@me.com</small>\n'}}},l=(e(160),e(17)),component=Object(l.a)(o,function(){var n=this.$createElement;return(this._self._c||n)("Slides",{attrs:{content:this.content}})},[],!1,null,null,null);t.default=component.exports}}]);