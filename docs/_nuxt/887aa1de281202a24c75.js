(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{161:function(n,e,t){var content=t(381);"string"==typeof content&&(content=[[n.i,content,""]]),content.locals&&(n.exports=content.locals);(0,t(67).default)("a55169ee",content,!1,{sourceMap:!1})},380:function(n,e,t){"use strict";var o=t(161);t.n(o).a},381:function(n,e,t){(n.exports=t(66)(!1)).push([n.i,"body{margin:0;overflow:hidden}",""])},406:function(n,e,t){"use strict";t.r(e);var o=t(146),l=t.n(o),c=(t(147),t(145)),r=t(148);Object(c.b)(function(code){return l.a.highlightAuto(code).value||code});var d={components:{Slides:r.a},data:function(){return{content:'# CSS in Native\n\n<small>CSSConf Guangzhou 2016</small>\n\n----\n\n\x3c!-- backgroundImage: ./jinjiang.jpg --\x3e\n\x3c!-- style: background-color: #f90; background-size: contain; background-position: center right; --\x3e\n\n### Self Introduction\n\n* @å‹¾ä¸‰è‚¡å››\n* `mailto:zhaojinjiang@me.com`\n* `twitter.com/zhaojinjiang`\n* <weex></weex> <vue></vue>\n* âš½âš½âš½ ðŸŽµðŸŽµðŸŽµ\n\n----\n\n# ðŸ•›\n\n----\n\n# What is <weex></weex> ?\n\n----\n\n\x3c!-- backgroundImage: ./mobile.jpg --\x3e\n\n## 1\n\nBuild Dynamic Mobile App\n\n----\n\n\x3c!-- backgroundImage: ./vue-component.png --\x3e\n\x3c!-- style: background-size: contain; background-position: center left; --\x3e\n\n## 2\n\nUsing HTML / CSS / JavaScript  \n<small>Actually <vue></vue> Vue 2.0 by default</small>\n\n----\n\n\x3c!-- backgroundImage: ./power.jpg --\x3e\n\n## 3\n\nNative View & Device Power\n\n----\n\n\x3c!-- backgroundImage: ./construction-work-carpenter-tools-large.jpg --\x3e\n\n## 4\n\nFree to Extend\n\n----\n\n\x3c!-- backgroundImage: ./weex-github.png --\x3e\n\n## 5\n\nOpen Source: [alibaba/weex](https://github.com/alibaba/weex)\n\n----\n\n# ðŸ•‘\n\n----\n\n## How We use CSS?\n\n----\n\n\x3c!-- backgroundImage: ./native-style.png --\x3e\n\nEvery native view has its style\n\n----\n\n\x3c!-- HTML -> JSON --\x3e\n\n### In Compiler\n\nTransform HTML/CSS code  \ninto JSON first.\n\n----\n\n\x3c!-- JSON -> style --\x3e\n\n### In JS Runtime\n\nSend JSON to native render  \nthrough JavaScript\n\n----\n\n\x3c!-- backgroundImage: ./weex-arch.png --\x3e\n\x3c!-- style: background-size: contain --\x3e\n\n&nbsp;\n\n----\n\n# ðŸ•’\n\n----\n\n### We Have Two Ways\n\n----\n\n### Mode A: inline style\n\n```html\n<template>\n  <div style="width: 200">\n</template>\n```\n\n----\n\n### Final native call\n\n```js\nnativeDom.createBody({\n  type: \'div\',\n  style: {\n    width: 200\n  }\n})\n```\n\n----\n\n### Mode B: `<style>`\n\n```html\n<template>\n  <div class="foo">\n</template>\n<style>\n  .foo { width: 200; }\n</style>\n```\n\n----\n\n```js\nconst &dollar;style = {\n  foo: { width: 200 }\n}\nnativeDom.createBody({\n  type: \'div\',\n  style: &dollar;style.foo\n})\n```\n\n----\n\n### Final native call\n\n```js\nnativeDom.createBody({\n  type: \'div\',\n  style: {\n    width: 200\n  }\n})\n```\n\n----\n\n### Mode A &amp; Mode B\n\nCSS -> JSON -> Native View\n\n----\n\n### Mode A &amp; Mode B\n\n* familiar ðŸ˜€\n* fast ðŸ˜€\n* scoped ðŸ˜€\n\n----\n\n# ðŸ•“\n\n----\n\n# Something Else\n\n----\n\n## Support More Length Units?\n\n----\n\n```html\n<template>\n  <div style="width: 100vw;"></div>\n</template>\n```\n\n----\n\n### define `CSS_UNIT`\n\nin runtime\n\n`VW`: `<px of viewport> / 100`\n\n----\n\n### Compile CSS Values\n\nbefore runtime\n\n`100vw` -> `100 * CSS_UNIT.VW`\n\n----\n\n### Final native call\n\n```js\nnativeDom.createBody({\n  type: \'div\',\n  style: {\n    width: 100 * CSS_UNIT.VW\n  }\n})\n```\n\n----\n\n## How much CSS does Weex support?\n\n----\n\n\x3c!-- backgroundImage: ./css-stat.png --\x3e\n\x3c!-- style: background-size: contain; --\x3e\n\n[Weex CSS Status](https://gist.github.com/Jinjiang/2112c034624a2a03267fc7d8d7ec964b#file-stat-css-md)\n\n----\n\n### Some Details\n\n* `flexbox`\n* `border-box` only\n* `position: sticky | fixed`\n* no `float`\n\n----\n\n### Feature Requested Most\n\n* `display: none`\n* `background-image`\n* `flex-wrap`\n* `text-shadow` | `box-shadow`\n\n----\n\n## CSS Inheritance?\n\n----\n\n\x3c!-- backgroundImage: ./reset.jpg --\x3e\n\nRef: [Fix Global CSS with PostCSS](https://ai.github.io/postcss-isolation/)\n\n----\n\nWeex do not inherit anything.\n\n`all: initial` by default\n\n----\n\n## Support PostCSS\n\nby `vue-loader`\n\n----\n\n# ðŸ••\n\n----\n\n\x3c!-- weex init --\x3e\n\x3c!-- inline style --\x3e\n\x3c!-- <style> --\x3e\n\x3c!-- more units --\x3e\n\x3c!-- PostCSS: cssnext --\x3e\n\n# Demo\n\n----\n\n# ðŸ•—\n\n----\n\n# In Developing...\n\n----\n\n## 1) Viewport\n\n----\n\n```html\n<head>\n  <meta\n    name="viewport"\n    content="width=device-width">\n</head>\n```\n\n----\n\n### Final native call\n\n```js\nnativeMeta.setViewport({\n  width: \'device-width\'\n})\n```\n\n----\n\n```html\n<head>\n  <meta\n    name="viewport"\n    content="width=750">\n</head>\n```\n\n----\n\n### Final native call\n\n```js\nnativeMeta.setViewport({\n  width: 750\n})\n```\n\n----\n\n# ðŸ•˜\n\n----\n\n## 2) Pseudo Class\n\n----\n\nProblem\n\n----\n\n```html\n<template>\n  <div>\n    <text\n      style="color: red;"\n      ontouchstart="start"\n      ontouchend="end">Touch!</text>\n  </div>\n</template>\n```\n\n----\n\nAnd bind events:\n\n```js\nfunction start (e) {\n  e.target.style.color = \'blue\'\n}\nfunction end (e) {\n  e.target.style.color = \'red\'\n}\n```\n\n----\n\nHow About Using Pseudo Class to remove JS Events?\n\n----\n\n### Step 1\n\nSupport **`color:active`** style in native view.\n\nRespond natively.\n\n(without JS events)\n\n----\n\n### Step 2\n\nAnd **transform** pseudo class into them ...\n\n----\n\n```html\n<template>\n  <div>\n    <text class="foo"></text>\n  </div>\n</template>\n<style>\n  .foo { color: red; }\n  .foo:active { color: blue; }\n</style>\n```\n\n----\n\nAfter **transform** ...\n\n----\n\n```html\n<template>\n  <div>\n    <text class="foo"></text>\n  </div>\n</template>\n<style>\n  .foo { color: red; }\n  .foo { color:active: blue; }\n</style>\n```\n\n----\n\n### Final native call\n\n```js\nnativeDom.createBody({\n  type: \'div\',\n  style: {\n    color: \'red\',\n    \'color:active\': \'blue\'\n  }\n})\n```\n\n----\n\n# ðŸ•™\n\n----\n\n## 3) Pseudo Element?\n\nto draw a triangle\n\n----\n\n### in Web Platform\n\n```css\ntooltip::after {\n  content: "";\n  position: absolute;\n  border: 5px solid transparent;\n  border-left-color: black;\n}\n```\n\n----\n\n### We Recommend SVG!\n\n----\n\n```html\n<svg height="10" width="10">\n  <polygon\n    points="0,0 0,10 5,5"\n    style="fill:black;">\n  </polygon>\n</svg>\n```\n\n----\n\n\x3c!-- backgroundImage: ./iconfont.jpg --\x3e\n\x3c!-- style: background-size: contain; --\x3e\n\n## 4) Icon Font\n\n----\n\n## 5) Transition\n\n----\n\n# Demo 2\n\n----\n\n### Conclusion\n\n* familiar / fast / scoped\n* more units\n* status of CSS support\n* no inheritance\n* PostCSS\n* ViewportðŸ”§/ Pseudo ClassðŸ”§\n* SVGðŸ”§/ IconFontðŸ”§/ TransitionðŸ”§\n\n----\n\n# ðŸ•›\n\n----\n\n### One More Thing...\n\n![](./asf_logo.png)\n\n----\n\n\x3c!-- backgroundImage: ./apache.png --\x3e\n\x3c!-- style: background-size: contain; --\x3e\n\n&nbsp;\n\n----\n\n# Thanks\n\ngithub: alibaba/<weex></weex>\n\n<style>\n  weex {\n    display: inline-block;\n    width: 3em;\n    height: 1em;\n    background-position: center bottom;\n    background-repeat: no-repeat;\n    background-image: url(./weex-logo.png);\n    background-size: contain;\n  }\n  vue {\n    display: inline-block;\n    width: 1em;\n    height: 1em;\n    transform: scale(1.5) translateY(0.1em);\n    background-position: center bottom;\n    background-repeat: no-repeat;\n    background-image: url(./vue-logo.png);\n    background-size: contain;\n  }\n</style>\n'}}},m=(t(380),t(17)),component=Object(m.a)(d,function(){var n=this.$createElement;return(this._self._c||n)("Slides",{attrs:{content:this.content}})},[],!1,null,null,null);e.default=component.exports}}]);